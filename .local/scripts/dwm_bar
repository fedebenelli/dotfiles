#!/bin/sh

music() {
	playing="$(mpc | sed '2q;d' | cut -d' ' -f1)"
	artist="$(mpc current)"
	volume="v: $(mpc volume | cut -d' ' -f2)"
	if [ -z $playing ]; then
		printf "[]"
	elif [ $playing = '[paused]' ]; then
		printf "%s | %s | %s" " (||)" "$artist" "$volume"
	elif [ $playing == '[playing]' ]; then
		printf " %s | %s | %s" "(>)" "$artist" "$volume"
	fi
}

ram() {
	printf "$(free -h | grep Mem | awk '{print $3"/"$2}')"
}

max_cpu() {
	sum=0
	count=0
	for cpu in $(cat /proc/cpuinfo  | grep MHz | awk '{print $4}');do
		sum=$(($sum+${cpu%.*}));
		count=$(($count+1));
	done
	printf $(($sum/$count))
}

temps() {
	for temp in $(sensors | grep temp | awk '{print $2}' | sed '/^$/d'); do printf "$temp | "; done
}

weather() {
	curl "wttr.in/$1?format=3"
}

rss() {
	cat "$XDG_DATA_HOME/newsboat/pending"
}

bat() {
	now=$(cat /sys/class/power_supply/BAT0/charge_now) && \
	full=$(cat /sys/class/power_supply/BAT0/charge_full) && \
	printf $((now*100/full))
}

wttr() {
	printf "$(curl wttr.in/Cordoba,AR?format=3)"
}

volume() {
	vol=$(pamixer --get-volume)	
	symbol="ðŸ”ˆ" 
	[ $vol -gt 30 ] && symbol="ðŸ”‰" 
	[ $vol -gt 70 ] && symbol="ðŸ”Š" 
	[ $(pamixer --get-mute) = true ] && symbol="ðŸ”‡" 
	printf "%s $vol%s" "$symbol" "%"
}

print_bar() {
	echo "$wttr $sep $(music) $sep RAM: $(ram) $sep $(max_cpu) $sep $(free_drives) $sep $(volume) $sep $(date '+%Y/%m/%d -- %H:%M')" 2> /dev/null
}

sep='|'

bar() {
	xsetroot -name "$(print_bar)"
}

$(bar)
echo "$(print_bar)"

#while true; do
#	$(bar)
#	print_bar
#	sleep 1s
#done
